<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxia.salesManagement.system.dao.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.sanxia.salesManagement.system.model.Permission" >
    <id column="permission_id" property="permissionId" jdbcType="INTEGER" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="permission_url" property="permissionUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    permission_id, p_id, permission_name, type, permission_url
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    insert into permission (permission_id, p_id, permission_name, 
      type, permission_url)
    values (#{permissionId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{permissionUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="permissionUrl != null" >
        permission_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="permissionUrl != null" >
        #{permissionUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    update permission
    <set >
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null" >
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="permissionUrl != null" >
        permission_url = #{permissionUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    update permission
    set p_id = #{pId,jdbcType=INTEGER},
      permission_name = #{permissionName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      permission_url = #{permissionUrl,jdbcType=VARCHAR}
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>
  
  <!-- 查询权限列表 -->
  <select id="queryAllPermission" resultMap="BaseResultMap"   >
    select 
    <include refid="Base_Column_List" />
    from permission
  </select>
  
    <!-- 添加权限列表 -->
     <insert id="addPermissionByPermission" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    insert into permission (permission_id, p_id, permission_name, 
      type, permission_url)
    values (#{permissionId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{permissionUrl,jdbcType=VARCHAR})
  </insert>
  
  
  <!--######权限-->
  <select id="queryMenuByUserId" resultMap="BaseResultMap">
       select 
       *
       FROM
      `user`
	   INNER JOIN user_role ON `user`.user_id = user_role.user_id
	   INNER JOIN role ON user_role.role_id = role.role_id
	   INNER JOIN role_permisson ON role.role_id = role_permisson.role_id
	   INNER JOIN permission ON role_permisson.permission_id = permission.permission_id
	   WHERE `user`.user_id=#{userId,jdbcType=INTEGER}
  </select>
  
  <select
		id="querypermissionByPId_Son"
		resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from permission
		where p_id =
		#{permissionId,jdbcType=INTEGER}
	</select>
 <!--######权限--> 
 
 
 <select id="queryPermissionById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </select>
  
  
  <update id="updatePermissionByPermission" parameterType="com.sanxia.salesManagement.system.model.Permission" >
    update permission
    set p_id = #{pId,jdbcType=INTEGER},
      permission_name = #{permissionName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      permission_url = #{permissionUrl,jdbcType=VARCHAR}
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>
  
  <delete id="deletePermissionById" parameterType="java.lang.Integer" >
    delete from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </delete>
  
  
   <select id="query_XZ_CByrole_id" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        SELECT
		permission.permission_id,
		permission.p_id,
		permission.`permission_name`,
		permission.type,
		permission.permission_url
		FROM
		role_permisson
		INNER JOIN permission ON role_permisson.permission_id =
		permission.permission_id
		WHERE role_id=#{roleId,jdbcType=INTEGER}
  </select>
  
  
  
  <select id="selectPermissionByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where permission_name like #{permissionName,jdbcType=VARCHAR}
  </select>
  
   <select id="queryAllPermissionByPID" resultMap="BaseResultMap" parameterType="Map" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where p_id = #{pId1} OR p_id = #{pId2}
  </select>
</mapper>