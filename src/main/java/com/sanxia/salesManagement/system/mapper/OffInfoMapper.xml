<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxia.salesManagement.system.dao.OffInfoMapper" >
  <resultMap id="BaseResultMap" type="com.sanxia.salesManagement.system.model.OffInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="salesman_id" property="salesmanId" jdbcType="INTEGER" />
    <result column="salesman_name" property="salesmanName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="total_days" property="totalDays" jdbcType="DECIMAL" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, salesman_id, salesman_name, start_time, end_time, total_days, reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from off_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from off_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    insert into off_info (id, salesman_id, salesman_name, 
      start_time, end_time, total_days, 
      reason)
    values (#{id,jdbcType=INTEGER}, #{salesmanId,jdbcType=INTEGER}, #{salesmanName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{totalDays,jdbcType=DECIMAL}, 
      #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    insert into off_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="salesmanId != null" >
        salesman_id,
      </if>
      <if test="salesmanName != null" >
        salesman_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="totalDays != null" >
        total_days,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="salesmanId != null" >
        #{salesmanId,jdbcType=INTEGER},
      </if>
      <if test="salesmanName != null" >
        #{salesmanName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalDays != null" >
        #{totalDays,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    update off_info
    <set >
      <if test="salesmanId != null" >
        salesman_id = #{salesmanId,jdbcType=INTEGER},
      </if>
      <if test="salesmanName != null" >
        salesman_name = #{salesmanName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalDays != null" >
        total_days = #{totalDays,jdbcType=DECIMAL},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    update off_info
    set salesman_id = #{salesmanId,jdbcType=INTEGER},
      salesman_name = #{salesmanName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      total_days = #{totalDays,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <select id="queryAllOffInfo" resultMap="BaseResultMap"   >
    select 
    <include refid="Base_Column_List" />
    from off_info
  </select>
  
   <select id="queryOffInfoById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
     <include refid="Base_Column_List" />
    from off_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteOffInfoById" parameterType="java.lang.Integer" >
    delete from off_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="addOffInfoByOffInfo" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    insert into off_info (id, salesman_id, salesman_name, 
      start_time, end_time, total_days, 
      reason)
    values (#{id,jdbcType=INTEGER}, #{salesmanId,jdbcType=INTEGER}, #{salesmanName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{totalDays,jdbcType=DECIMAL}, 
      #{reason,jdbcType=VARCHAR})
  </insert>
  
  <update id="updateOffInfoByOffInfo" parameterType="com.sanxia.salesManagement.system.model.OffInfo" >
    update off_info
    set salesman_id = #{salesmanId,jdbcType=INTEGER},
      salesman_name = #{salesmanName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      total_days = #{totalDays,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryOffByIdAndTime" resultType="java.math.BigDecimal" parameterType="Map" >
   SELECT SUM(total_days) 
   FROM off_info
   WHERE salesman_id = #{salesmanIdTotal} 
   AND start_time BETWEEN #{startTimeTotal} AND #{endTimeTotal}
  </select>
  
  
   <select id="selectOffBySalesmansId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from off_info
    where salesman_id = #{salesmanId,jdbcType=INTEGER}
  </select>
  
   <select id="selectOffBySalesmansName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from off_info
    where salesman_name like #{salesmanName,jdbcType=VARCHAR}
  </select>
</mapper>