<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sanxia.salesManagement.system.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sanxia.salesManagement.system.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, name, login_name, password, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sanxia.salesManagement.system.model.User" >
    insert into user (user_id, name, login_name, 
      password, create_time)
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.sanxia.salesManagement.system.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sanxia.salesManagement.system.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sanxia.salesManagement.system.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
 <!-- ########################################################### -->
 <!--根据用户名查询用户所有信息  -->
	<select id="queryUserByLogin_nameAndPassword" resultMap="BaseResultMap" parameterType="com.sanxia.salesManagement.system.model.User">
	select 
    <include refid="Base_Column_List" />
    from user
    where login_name = #{loginName,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
	</select>
	
<!--查询用户所有信息  -->
	<select id="queryAllUser" resultMap="BaseResultMap" >
	select 
    <include refid="Base_Column_List" />
    from user
	</select>
	
<!--增加用户所有信息  -->
 <insert id="addUserByUser" parameterType="com.sanxia.salesManagement.system.model.User" >
    insert into user (user_id, name, login_name, 
      password, create_time)
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE})
  </insert>
  
 <!--删除用户所有信息  --> 
  <delete id="deleteUserByUser_id" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <!--根据id查询用户所有信息  -->
	<select id="queryUserByUser_id" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
	</select>
<!--根据id修改用户所有信息  -->
	 <update id="updateUserById" parameterType="com.sanxia.salesManagement.system.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  
  <select id="queryUserIdByLoginName" resultType="java.lang.Integer" parameterType="java.lang.String">
	select 
    user_id
    from user
    where login_name = #{loginName,jdbcType=VARCHAR}
	</select>
	
<!--删除用户信息 --> 	
<delete id="deleteUserByLoginName" parameterType="java.lang.String" >
    delete from user
    where login_name = #{loginName,jdbcType=VARCHAR}
</delete>
 
<!-- 根据用户名查询搜索用户 -->  
<select id="selectUserByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where login_name = #{loginName,jdbcType=VARCHAR}
</select>
  
<!-- 根据姓名模糊查询搜索用户 -->
<select id="selectUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
	select 
    <include refid="Base_Column_List" />
    from user
    where name like #{name,jdbcType=VARCHAR}
</select>

<!--修改用户信息 -->   
<update id="updateUserNameById" parameterType="com.sanxia.salesManagement.system.model.User" >
    update user
    set name = #{name,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
</update>
	
</mapper>